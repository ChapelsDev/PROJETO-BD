<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAm
        BgAAAk1TRnQBSQFMAwEBAAEYAQABGAEAASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUD/AP8A/wD/ACIAAwMBBANLAa8DSwGvA0sBrwNLAa8DSwGvA0sBrwNLAa8DSwGv
        A0sBrwNLAa8DSwGvA0sBrwNLAa8DSwGvA0sBrwNLAa8DSwGvA0sBrwNLAa8DSwGvA0sBrwNLAa8DSwGv
        A0sBrwNLAa8DQwF6AwABAf8AlQADIwHsAzMB4QNJAb8DSQG/A0kBvwNJAb8DSQG/A0kBvwNJAb8DSQG/
        A0kBvwNJAb8DSQG/A0kBvwNJAb8DSQG/A0kBvwNJAb8DSQG/A0kBvwNJAb8DSQG/A0kBvwNHAcQDEgH2
        A0sBnv8AmQADTAGsA0kBu1QAAxcBIAMnAeoDOgFi/wCZAAMtAUYDEgH2AzIBUAMAAQFIAAMIAQsDSQGR
        AzcB3QMMARD/AJkAAwMBBANKAaQDGQHyAzcBWkQAAwQBBgNMAbEDGAHzAygBPP8AoQADBAEFA0MBegMg
        Ae4DRwHEAzwBZwMTARosAAMCAQMDIwEzA0cBhgMuAeQDRQHKAy8BSQMBAQL/AKkAAwYBCANLAZ0DEwH1
        Aw8B+ANIAY0DEAEWAwABARgAAwIBAwMgAS4DSgG9AwYB+wMsAeYDOgFiAwIBA/8AuAABAQMYASEDPAFn
        A0UBygMvAeMDPAFnAwEBAhAAAwYBCANLAZ4DEgH2A0sBqQMwAU0DDQER/wDJAAMFAQcDSAGMAyMB7AMV
        AR0QAANFAYEDJwHrAy0BRf8A2QADAwEEAycB6gMrAUMMAAMDAQQDSgG4A0oBtQMBAQL/AN0AAzMB4AMy
        AVEMAAMEAQUDSQG8A0sBqP8A3QADDQESAyEB7QMyAVEMAAMEAQUDSQG8A0oBugMEAQb/ANUAAwMBBANK
        AaQDQgHPAxIBGA8AAQEDMQFPAxwB8AMpAT7/ANUAAxQBGwMuAeQDNwFcGAADSwGlA0wBq/8A1AABAQND
        AXoDFQH0AwoBDhgAAzEBTgMeAe8DKAE9/wDNAAMqAUEDEgH2A0QBfxwAAxIBGQNKAb0DRgHGAwUBB/8A
        yQADRAF+AzkB2wMMARAgAAMjATMDJwHqAwkBDP8AyQADPAFmAyMB7AMcAScfAAEBA0MBewM3AdwDBwEK
        /wDJAAMfASwDEwH1AyIBMiAAA0sBmwNIAcADBAEG/wDJAAM1AVcDLAHmAxYBHiAAAzABTAMzAeADCAEL
        /wDJAANDAXgDOQHbAwwBECAAAw0BEQMJAfoDCwEP/wDJAANHAYgDPQHXAwcBCiQAAw8B+AMWAR7/AMkA
        A0MBfAM5AdsDCwEPIAADAwEEAwkB+gMSARj/AMkAAzMBUgMnAesDGgEkIAADMAFNAywB5gMJAQz/AMkA
        AwsBDwMgAe4DQwF5AwEBAhQAAwQBBgMYASIDPwHSA0wBrAMDAQT/AM0AAzQBVQMeAe8DRwGEAwYBCAwA
        AwoBDgNMAawDLwHjA0YByQMXASD/ANEAAwIBAwM9AWsDOQHZAyAB7gNJAbwDSwGeA0wBqgMqAecDQwHO
        AzUBVwMGAQj/AN0AAw0BEQMnATsDRAF+A0sBnwNKAZMDMwFSAwsBD/8A/wD/AP8A/wC1AAFCAU0BPgcA
        AT4DAAEoAwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAE/wwABP8MAAHgAgABAQwAAfACAAEDDAAB8wL/
        AeMMAAHwAv8BwwwAAfAC/wGHDAAB+AEfAfwBBwwAAf4BAwHwAR8MAAH/AQEB4AF/DAAB/wHhAeMB/wwA
        Af8B8QHDAf8MAAH/AfkBxwH/DAAB/wHxAcMB/wwAAf8B4QHDAf8MAAH/AeMB8wH/DAAB/wHDAfEB/wwA
        Af8BxwHwAf8MAAH/AccB+AH/DAAB/wHHAfAB/wwAAf8BxwH4Af8MAAH/AccB+AH/DAAB/wHHAfgB/wwA
        Af8BxwH8Af8MAAH/AccB+AH/DAAB/wHHAfgB/wwAAf8BwwHgAf8MAAH/AeEBwQH/DAAB/wHgAQMB/wwA
        Af8B+AEPAf8MAAT/DAAE/wwACw==
</value>
  </data>
</root>